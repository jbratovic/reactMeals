[{"D:\\React\\reactMeals-app\\src\\index.js":"1","D:\\React\\reactMeals-app\\src\\App.js":"2","D:\\React\\reactMeals-app\\src\\Layout\\Header.js":"3","D:\\React\\reactMeals-app\\src\\Layout\\HeaderCartButton.js":"4","D:\\React\\reactMeals-app\\src\\Cart\\CartIcon.js":"5","D:\\React\\reactMeals-app\\src\\Meals\\Meals.js":"6","D:\\React\\reactMeals-app\\src\\Meals\\MealsSummary.js":"7","D:\\React\\reactMeals-app\\src\\Meals\\AvailableMeals.js":"8","D:\\React\\reactMeals-app\\src\\UI\\Card.js":"9","D:\\React\\reactMeals-app\\src\\Meals\\MealItem\\MealItem.js":"10","D:\\React\\reactMeals-app\\src\\Meals\\MealItem\\MealItemForm.js":"11","D:\\React\\reactMeals-app\\src\\UI\\Input.js":"12","D:\\React\\reactMeals-app\\src\\Cart\\Cart.js":"13","D:\\React\\reactMeals-app\\src\\UI\\Modal.js":"14","D:\\React\\reactMeals-app\\src\\store\\store-context.js":"15","D:\\React\\reactMeals-app\\src\\Cart\\CartItem.js":"16","D:\\React\\reactMeals-app\\src\\UI\\Spinner.js":"17","D:\\React\\reactMeals-app\\src\\Cart\\Checkout.js":"18","D:\\React\\reactMeals-app\\src\\hooks\\use-input.js":"19"},{"size":249,"mtime":1621867484512,"results":"20","hashOfConfig":"21"},{"size":637,"mtime":1624614343024,"results":"22","hashOfConfig":"21"},{"size":638,"mtime":1624614372699,"results":"23","hashOfConfig":"21"},{"size":1132,"mtime":1623247862663,"results":"24","hashOfConfig":"21"},{"size":488,"mtime":1619529421000,"results":"25","hashOfConfig":"21"},{"size":269,"mtime":1619529421000,"results":"26","hashOfConfig":"21"},{"size":529,"mtime":1619529421000,"results":"27","hashOfConfig":"21"},{"size":2455,"mtime":1635945252248,"results":"28","hashOfConfig":"21"},{"size":152,"mtime":1619529421000,"results":"29","hashOfConfig":"21"},{"size":930,"mtime":1627550721184,"results":"30","hashOfConfig":"21"},{"size":863,"mtime":1627556554108,"results":"31","hashOfConfig":"21"},{"size":314,"mtime":1627556575146,"results":"32","hashOfConfig":"21"},{"size":3454,"mtime":1635945307881,"results":"33","hashOfConfig":"21"},{"size":691,"mtime":1621855172996,"results":"34","hashOfConfig":"21"},{"size":3387,"mtime":1635944990280,"results":"35","hashOfConfig":"21"},{"size":615,"mtime":1622814977369,"results":"36","hashOfConfig":"21"},{"size":383,"mtime":1624957771677,"results":"37","hashOfConfig":"21"},{"size":3777,"mtime":1627554209766,"results":"38","hashOfConfig":"21"},{"size":1142,"mtime":1625048629513,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1c43yn",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\React\\reactMeals-app\\src\\index.js",[],["80","81"],"D:\\React\\reactMeals-app\\src\\App.js",[],"D:\\React\\reactMeals-app\\src\\Layout\\Header.js",[],"D:\\React\\reactMeals-app\\src\\Layout\\HeaderCartButton.js",[],"D:\\React\\reactMeals-app\\src\\Cart\\CartIcon.js",[],"D:\\React\\reactMeals-app\\src\\Meals\\Meals.js",[],"D:\\React\\reactMeals-app\\src\\Meals\\MealsSummary.js",[],"D:\\React\\reactMeals-app\\src\\Meals\\AvailableMeals.js",[],"D:\\React\\reactMeals-app\\src\\UI\\Card.js",[],"D:\\React\\reactMeals-app\\src\\Meals\\MealItem\\MealItem.js",[],"D:\\React\\reactMeals-app\\src\\Meals\\MealItem\\MealItemForm.js",[],"D:\\React\\reactMeals-app\\src\\UI\\Input.js",[],"D:\\React\\reactMeals-app\\src\\Cart\\Cart.js",[],"D:\\React\\reactMeals-app\\src\\UI\\Modal.js",[],"D:\\React\\reactMeals-app\\src\\store\\store-context.js",[],"D:\\React\\reactMeals-app\\src\\Cart\\CartItem.js",[],"D:\\React\\reactMeals-app\\src\\UI\\Spinner.js",[],"D:\\React\\reactMeals-app\\src\\Cart\\Checkout.js",["82"],"import React, { useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\nimport useInput from '../hooks/use-input';\r\n\r\n// custom hook example of form and validation\r\nconst Checkout = (props) => {\r\n\r\n    const {\r\n        inputValue: inputValueName,\r\n        isInputValid: isUsernameValid,\r\n        isInputValidAndBlur: isUsernameValidAndBlur,\r\n        inputHandler: nameHandler,\r\n        inputBlurHandler: nameBlurHandler\r\n    } = useInput('name');\r\n\r\n    const {\r\n        inputValue: inputValueStreet,\r\n        isInputValid: isStreetValid,\r\n        isInputValidAndBlur: isStreetValidAndBlur,\r\n        inputHandler: streetHandler,\r\n        inputBlurHandler: streetBlurHandler\r\n    } = useInput('street');\r\n\r\n    const {\r\n        inputValue: inputValuePostalCode,\r\n        isInputValid: isPostalCodeValid,\r\n        isInputValidAndBlur: isPostalCodeValidAndBlur,\r\n        inputHandler: postalCodeHandler,\r\n        inputBlurHandler: postalCodeBlurHandler\r\n    } = useInput('postal');\r\n\r\n    const {\r\n        inputValue: inputValueCity,\r\n        isInputValid: isCityValid,\r\n        isInputValidAndBlur: isCityValidAndBlur,\r\n        inputHandler: cityHandler,\r\n        inputBlurHandler: cityBlurHandler\r\n    } = useInput('city');\r\n\r\n    let isFormValid = false;\r\n    if (isUsernameValid && isStreetValid && isPostalCodeValid && isCityValid) { // all variables must be TRUE\r\n        isFormValid = true;\r\n    }\r\n\r\n    const submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!isFormValid) {\r\n            return;\r\n        }\r\n\r\n        const userData = {\r\n            user: inputValueName,\r\n            street: inputValueStreet,\r\n            postal: inputValuePostalCode,\r\n            city: inputValueCity\r\n        };\r\n        props.checkoutUserData(userData);\r\n    }\r\n\r\n    const errorClassName = isUsernameValidAndBlur ? `${classes.control} ${classes.invalid}` : `${classes.control}`;\r\n    const errorClassStreet = isStreetValidAndBlur ? `${classes.control} ${classes.invalid}` : `${classes.control}`;\r\n    const errorClassPostalCode = isPostalCodeValidAndBlur ? `${classes.control} ${classes.invalid}` : `${classes.control}`;\r\n    const errorClassCity = isCityValidAndBlur ? `${classes.control} ${classes.invalid}` : `${classes.control}`;\r\n\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={submitFormHandler}>\r\n\r\n            <div className={errorClassName}>\r\n                <label htmlFor='name'>Your Name</label>\r\n                <input type='text' id='name' value={inputValueName} onChange={nameHandler} onBlur={nameBlurHandler} />\r\n                {isUsernameValidAndBlur && <p>Please insert valid name.</p>}\r\n            </div>\r\n\r\n            <div className={errorClassStreet}>\r\n                <label htmlFor='name'>Street</label>\r\n                <input type='text' id='street' value={inputValueStreet} onChange={streetHandler} onBlur={streetBlurHandler} />\r\n            </div>\r\n\r\n            <div className={errorClassPostalCode}>\r\n                <label htmlFor='name'>Postal Code</label>\r\n                <input type='number' id='postal' value={inputValuePostalCode} onChange={postalCodeHandler} onBlur={postalCodeBlurHandler} />\r\n            </div>\r\n\r\n            <div className={errorClassCity}>\r\n                <label htmlFor='name'>City</label>\r\n                <input type='text' id='city' value={inputValueCity} onChange={cityHandler} onBlur={cityBlurHandler} />\r\n                {isCityValidAndBlur && <p>First letter must be uppercase.</p>}\r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n                <button onClick={props.closeOverlay}>Cancel</button>\r\n                <button>Confirm</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default Checkout;","D:\\React\\reactMeals-app\\src\\hooks\\use-input.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]